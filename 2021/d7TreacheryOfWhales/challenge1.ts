/** Autogenerated template. */

const calcArraySum = (arrayOfNumbers: number[]): number => {
  console.log(arrayOfNumbers, "array ");
  return arrayOfNumbers.reduce(
    (accumulator, currentNumber) => accumulator + currentNumber,
    0
  );
};

const getArrayMode = (arrayOfNumbers: number[]): number => {
  const count: any = {};

  for (const number of arrayOfNumbers) {
    if (count[number] === undefined) {
      count[number] = 1;
    } else {
      count[number]++;
    }
  }

  const sortDescByCount = Object.keys(count).sort(
    (a, b) => count[b] - count[a]
  );
  return Number(sortDescByCount[0]);
};

const runSolution = (input: string[]): any => {
  /** Solution goes here */
  const crabPositions = input[0].split(",").map(Number);

  const mode = getArrayMode(crabPositions);

  let total = 0;

  for (const position of crabPositions) {
    total += Math.abs(position - mode);
  }

  return total;
};

export default runSolution;
